{"ast":null,"code":"import _objectSpread from\"/Users/abhaykumar/Documents/Web Dev/React/React Projects/tasklist/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/abhaykumar/Documents/Web Dev/React/React Projects/tasklist/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AddTask=function AddTask(_ref){var tasklist=_ref.tasklist,setTasklist=_ref.setTasklist,task=_ref.task,setTask=_ref.setTask;var handleSubmit=function handleSubmit(e){e.preventDefault();if(task.id){var date=new Date();var updatedTasklist=tasklist.map(function(todo){return todo.id===task.id?{id:task.id,name:task.name,time:\"\".concat(date.toLocaleTimeString(),\" \").concat(date.toLocaleDateString())}:todo;});setTasklist(updatedTasklist);setTask({});}else{var _date=new Date();var newTask={id:_date.getTime(),name:e.target.task.value,time:\"\".concat(_date.toLocaleTimeString(),\" \").concat(_date.toLocaleDateString())};setTasklist([].concat(_toConsumableArray(tasklist),[newTask]));setTask({});}};return/*#__PURE__*/_jsx(\"section\",{className:\"addTask\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"task\",value:task.name||\"\",autoComplete:\"off\",placeholder:\"add task\",maxLength:25,onChange:function onChange(e){return setTask(_objectSpread(_objectSpread({},task),{},{name:e.target.value}));}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:task.name?\"Update\":\"Add\"})]})});};","map":{"version":3,"names":["AddTask","_ref","tasklist","setTasklist","task","setTask","handleSubmit","e","preventDefault","id","date","Date","updatedTasklist","map","todo","name","time","concat","toLocaleTimeString","toLocaleDateString","newTask","getTime","target","value","_toConsumableArray","_jsx","className","children","_jsxs","onSubmit","type","autoComplete","placeholder","maxLength","onChange","_objectSpread"],"sources":["/Users/abhaykumar/Documents/Web Dev/React/React Projects/tasklist/src/components/AddTask.js"],"sourcesContent":["export const AddTask = ({tasklist, setTasklist, task, setTask}) => {\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        if(task.id){\n            const date = new Date();\n            const updatedTasklist = tasklist.map((todo) => (\n                todo.id === task.id ? {\n                    id: task.id,\n                    name: task.name,\n                    time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`\n                } : todo\n            ));\n            setTasklist(updatedTasklist);\n            setTask({});\n        }else{\n            const date = new Date();\n            const newTask = {\n                id: date.getTime(),\n                name: e.target.task.value,\n                time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`\n            };\n\n            setTasklist([...tasklist, newTask]);\n            setTask({});\n        }\n    }\n\n  return (\n   <section className=\"addTask\">\n        {/* After creating UI you just need to write a function handleSubmit to add new task */}\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"task\"  value={task.name || \"\"} autoComplete=\"off\" placeholder=\"add task\" maxLength={25} onChange={e => setTask({...task, name: e.target.value})}/>\n            <button type=\"submit\">{task.name? \"Update\": \"Add\"}</button>\n        </form>\n   </section>\n  )\n}\n"],"mappings":"6YAAA,MAAO,IAAM,CAAAA,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAAC,IAAA,CAA+C,IAA1C,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAAEC,OAAO,CAAAJ,IAAA,CAAPI,OAAO,CAEzD,GAAM,CAAAC,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAGC,CAAC,CAAG,CACrBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAGJ,IAAI,CAACK,EAAE,CAAC,CACP,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB,GAAM,CAAAC,eAAe,CAAGV,QAAQ,CAACW,GAAG,CAAC,SAACC,IAAI,QACtC,CAAAA,IAAI,CAACL,EAAE,GAAKL,IAAI,CAACK,EAAE,CAAG,CAClBA,EAAE,CAAEL,IAAI,CAACK,EAAE,CACXM,IAAI,CAAEX,IAAI,CAACW,IAAI,CACfC,IAAI,IAAAC,MAAA,CAAKP,IAAI,CAACQ,kBAAkB,CAAC,CAAC,MAAAD,MAAA,CAAIP,IAAI,CAACS,kBAAkB,CAAC,CAAC,CACnE,CAAC,CAAGL,IAAI,EACX,CAAC,CACFX,WAAW,CAACS,eAAe,CAAC,CAC5BP,OAAO,CAAC,CAAC,CAAC,CAAC,CACf,CAAC,IAAI,CACD,GAAM,CAAAK,KAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB,GAAM,CAAAS,OAAO,CAAG,CACZX,EAAE,CAAEC,KAAI,CAACW,OAAO,CAAC,CAAC,CAClBN,IAAI,CAAER,CAAC,CAACe,MAAM,CAAClB,IAAI,CAACmB,KAAK,CACzBP,IAAI,IAAAC,MAAA,CAAKP,KAAI,CAACQ,kBAAkB,CAAC,CAAC,MAAAD,MAAA,CAAIP,KAAI,CAACS,kBAAkB,CAAC,CAAC,CACnE,CAAC,CAEDhB,WAAW,IAAAc,MAAA,CAAAO,kBAAA,CAAKtB,QAAQ,GAAEkB,OAAO,EAAC,CAAC,CACnCf,OAAO,CAAC,CAAC,CAAC,CAAC,CACf,CACJ,CAAC,CAEH,mBACCoB,IAAA,YAASC,SAAS,CAAC,SAAS,CAAAC,QAAA,cAEvBC,KAAA,SAAMC,QAAQ,CAAEvB,YAAa,CAAAqB,QAAA,eACzBF,IAAA,UAAOK,IAAI,CAAC,MAAM,CAACf,IAAI,CAAC,MAAM,CAAEQ,KAAK,CAAEnB,IAAI,CAACW,IAAI,EAAI,EAAG,CAACgB,YAAY,CAAC,KAAK,CAACC,WAAW,CAAC,UAAU,CAACC,SAAS,CAAE,EAAG,CAACC,QAAQ,CAAE,SAAAA,SAAA3B,CAAC,QAAI,CAAAF,OAAO,CAAA8B,aAAA,CAAAA,aAAA,IAAK/B,IAAI,MAAEW,IAAI,CAAER,CAAC,CAACe,MAAM,CAACC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,cAC3KE,IAAA,WAAQK,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAEvB,IAAI,CAACW,IAAI,CAAE,QAAQ,CAAE,KAAK,CAAS,CAAC,EACzD,CAAC,CACH,CAAC,CAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}